@{
    ViewBag.Title = "Web Telemetry System «WebSphere»";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/_CSS/Reports/zerozam.css" rel="stylesheet" />
<link href="~/Content/_CSS/Mnemo/MnemoSingle.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/_JS/common/OpcReadWrite.js"></script>
<script type="text/javascript" src="~/Scripts/_JS/AdditionalFunctions.js"></script>
<script type="text/javascript" src="~/Scripts/_JS/jquery/jquery-1.11.0.min.js"></script>
<script type="text/javascript" src="~/Scripts/_JS/common/MyTime.js"></script>
<script type="text/javascript" src="~/Scripts/_JS/main.js"></script>
<script type="text/javascript" src="~/Scripts/SVG/Main.js"></script>
<script type="text/javascript" src="~/Scripts/SVG/Tag_types_update.js"></script>
<script type="text/javascript" src="~/Scripts/snap/snap.svg.js"></script> 


<link rel="stylesheet" type='text/css' href='/Content/_CSS/jqueryUI Theme/ui.jqgrid.css' />
<link rel="stylesheet" type='text/css' href='/Content/_CSS/Reports/zerozam.css' />
<!-- END -->
<!-- Scripts-->
<script type="text/javascript" src="/Scripts/_JS/jqGrid/grid.locale-ru.js"></script>
<script type="text/javascript" src="/Scripts/_JS/jqGrid/jquery.jqGrid.min.js"></script>
<link rel="stylesheet" type='text/css' href='/Content/_CSS/jqueryUI Theme/ui.jqgrid.css' />
<link rel="stylesheet" type="text/css" href="/Content/_CSS/jqueryUI Theme/jquery-ui-1.10.4.custom.min.css" />
<link rel="stylesheet" type="text/css" href="/Content/_CSS/datetimepicker/jquery.datetimepicker.css" />
<link rel="stylesheet" type="text/css" href="/Content/_CSS/Reports/Reports.css" />
<link rel="stylesheet" type='text/css' href='/Content/_CSS/main.css' />
<link rel="stylesheet" type='text/css' href='/Content/_CSS/Reports/zerozam.css' />
  
<object id="svg" data="~/Content/_svg/zd_chegodaevo.svg" type="image/svg+xml" width="100%" height="80%"></object>
 <div id='mess_div' class="row div_events" style="top: 70%; margin: 5px;overflow:hidden;width:99%">
    <h4>
        <input type="button" class="btn btn-default" style="width 100%;" value="Квитировать все" onclick="kvitirovanie_all()" />
    </h4>
    <table style='margin-bottom:0px;' id='lastalarms_table'></table>

</div>
<script type="text/javascript">

    window.addEventListener("load", function () { InitMnemoSVG("@Model.Name"); });
     $(function () {

         $('#lastalarms_table').jqGrid({
             caption: "",
             datatype: 'local',
             colNames: ['id', 'tag', 'ack', 'active', 'Тип', 'Начало события', 'Время начала', 'Конец события', 'Тревога', 'Время окончания', 'Время квитирования', "Длительность"],
             colModel: [{ name: 'Id', index: 'Id', hidden: true },
                 { name: 'Tag', index: 'Tag', hidden: true },
                 { name: 'Ack', index: 'Ack', hidden: true },
                 { name: 'Active', index: 'Active', hidden: true },
                 { name: 'Type', index: 'Type', hidden: true, width: '40%', sortable: false, classes: 'lambda_zam_col' },
                 { name: 'StartReason', index: 'StartReason', width: '150%', sortable: false, classes: 'lambda_zam_col', },
                 {
                     name: 'StartTime', index: 'StartTime', width: '40%', sortable: true, classes: 'lambda_zam_col',
                     sorttype: 'datetime', formatter: "date", formatoptions: { srcformat: "Y-m-d H:i:s", newformat: "d.m.Y  H:i:s" }
                 },
                 { name: 'EndReason', index: 'EndReason', hidden: true, width: '150%', sortable: false, classes: 'lambda_zam_col', },
                 { name: 'Message', index: 'Message', width: '150%', sortable: false, classes: 'lambda_zam_col', hidden: true },
                 {
                     name: 'EndTime', index: 'EndTime', hidden: true, width: '40%', align: 'center', sortable: true, sorttype: 'date',
                     formatter: "date", formatoptions: { srcformat: "Y-m-d H:i:s", newformat: "d.m.Y  H:i:s" }, classes: 'lambda_zam_col',
                 },
                 {
                     name: 'AckTime', index: 'AckTime', hidden: true, width: '40%', align: 'center', sortable: true, sorttype: 'date', classes: 'lambda_zam_col',
                     formatter: "date", formatoptions: { srcformat: "Y-m-d H:i:s", newformat: "d.m.Y  H:i:s" },
                 },
                 { name: 'Duration', index: 'Duration', hidden: true, width: '40%', sortable: false, classes: 'lambda_zam_col' }

             ],

             viewrecords: true,
             height: '100%',
             width: '900px',
             scroll: true,
             sortname: ' StartTime',
             sortorder: "asc",
             rowattr: function (rd) {
                 //Раскрашиваем алармы
                 //if (rd.Tag.indexOf("Work") > -1 && rd.Ack == false && rd.Active == true) { return { "class": "well_nekvit_activ" }; }
                 //else if (rd.Tag.indexOf("Work") > -1 && rd.Ack == true && rd.Active == true) { return { "class": "well_kvit_activ" }; }

                 //else if (rd.Ack == false && rd.Active == true) { return { "class": "zam_nekvit_activ" }; }
                 //else if (rd.Ack == true && rd.Active == true) { return { "class": "zam_kvit_activ" }; }
                 //else { return { "class": "zam_nekvit_neactiv" }; }

                 // if (rd.StartReason.indexOf("предельный") > -1 && rd.Ack == false && rd.Active == true) { return { "class": "alarm_pred" }; }
                 // else if (rd.StartReason.indexOf("критический") > -1 && rd.Ack == false && rd.Active == true) { return { "class": "alarm_krit" }; }
                 //
                 // else if (rd.Ack == true && rd.Active == true) { return { "class": "zam_kvit_activ" }; }
                 // else { return { "class": "zam_nekvit_neactiv" }; }
                 if (rd.Ack == true && (rd.Active == false || rd.Active == 0)) { return { "class": "zam_kvit_activ" }; }
                else if ((rd.StartReason == -1 || rd.StartReason == 1) && rd.Ack == false && (rd.Active == true || rd.Active == 1)) { return { "class": "alarm_pred" }; }
                 else if ((rd.StartReason == -2 || rd.StartReason == 2) && rd.Ack == false && (rd.Active == true || rd.Active == 1)) { return { "class": "alarm_krit" }; }

                 else if (rd.Ack == true && (rd.Active == true || rd.Active == 1)) { return { "class": "zam_kvit_activ" }; }
                 else { return { "class": "zam_nekvit_neactiv" }; }

             }
         });

         var lastalarmsW = document.getElementById('mess_div').offsetWidth;
         var lastalarmsH = document.getElementById('mess_div').offsetHeight;
         $("#lastalarms_table").setGridWidth(lastalarmsW - 19);
         $("#lastalarms_table").setGridHeight(lastalarmsH - 30);

         //Квитирование по двойному клику
         $("#lastalarms_table").jqGrid('setGridParam', {
             ondblClickRow: function (rowid, iRow, iCol, e) {
                 var rowData = jQuery(this).getRowData(rowid);
                 var id = rowData['Id'];
                 var tag = rowData['Tag'];
                 var ack = rowData['Ack'];
                 var active = rowData['Active'];
                 if (!ParseToBool(ack) || ack < 1)
                     kvitirovanie(rowid, id, tag, ack, active);
                 else
                     ErrMessage("Уже квитировано");
             }
         });

     });


        function errkvit() {
            ErrMessage("Не квитировано");
        }
        function getlastalarms() {

            LoadPageOn();
            //читаем алармы
            $.ajax({ type: "POST", url: "/Alarms/GetCurrentAlarmsEvents", data: {  }, async: true, success: page_drawAlarms, error: page_nodraw });
        }
        getlastalarms(@Html.Raw(ViewBag.id));
        setInterval('getlastalarms()',30000);

        function page_nodraw(data) {
            ErrMessage("Не удалось обновить события");
            LoadPageOff();
        }
        function page_drawAlarms(data) {
            //рисуем алармы
            var scrollPosition;
            scrollPosition = jQuery("#lastalarms_table").closest(".ui-jqgrid-bdiv").scrollTop();
            $("#lastalarms_table").jqGrid('clearGridData');
            var countmess = data.length;
            //  $("#lastalarms_table").setGridParam({ data: data });

            for (var i = data.length - 1; i >= 0 ; i--) {
                if (data[i].Ack == true || data[i].Ack>=1)  data[i].Ack = true;
                else data[i].Ack = false;
                if (data[i].Active == true || data[i].Active == 1)  data[i].Active = true;
                else data[i].Active = false;
                if (data[i].Active == false ) { data[i].Message = 'Была тревога: ' + data[i].Message; }
                if (data[i].Active == true ) { data[i].EndTime = ''; }
                if (data[i].Ack == false) { data[i].AckTime = ''; }

                if (data[i].Ack >= 1 && data[i].Active == false) { data[i].Type = ''; }
               else { data[i].Type = '1'; }
                $('#lastalarms_table').jqGrid('addRowData', data[i].Id,
                {
                    Id: data[i].Id,
                    StartReason: data[i].StartReason,
                    Type: data[i].Type,
                    EndReason: data[i].EndReason,
                    Message: data[i].Message,
                    StartTime: data[i].StartTime,
                    EndTime: data[i].EndTime,
                    Ack: data[i].Ack,
                    AckTime: data[i].AckTime,
                    Active: data[i].Active,
                    Duration: data[i].Duration
                });

                /*  if (data[i].Ack == false && data[i].Active == true)
                      $('#lastalarms_table').jqGrid('setRowData', data[i].Id, false, "zam_nekvit_activ");
                  else if (data[i].Ack == true && data[i].Active == true)
                      $('#lastalarms_table').jqGrid('setRowData', data[i].Id, false, "zam_kvit_activ");
                  else
                      $('#lastalarms_table').jqGrid('setRowData', data[i].Id, false, "zam_nekvit_neactiv");
              */}

            // $("#lastalarms_table").setGridParam({ rowNum: countmess }).trigger("reloadGrid");

            jQuery("#lastalarms_table").closest(".ui-jqgrid-bdiv").scrollTop(scrollPosition);
            LoadPageOff();
        }
        function kvitirovanie(rowid, id, tag, ack, active) {
            //if (!ack)
            //$.ajax({ type: "POST", url: '@Url.Action("SetAlarmAck", "Alarms")?id=' + id, async: true, success: getlastalarms, error: errkvit });


            //  $.ajax({
            //      type: "POST", url: "/api/Alarms/CheckPermission", data: { a: PERMISSION_RIGHT_Kvit }, async: false,
            //      success: function (_data) { data = _data; }
            //  });
            //  var kvit = data;
            //if (kvit) {
            if (active == 'true') {
                //getlastalarms();
                $.ajax({ type: "POST", url: "/Alarms/SetAlarmAck", data: { Tag: tag, Id: id }, async: true, success: getlastalarms });
            }
            else {
                $.ajax({ type: "POST", url: "/Alarms/SetAlarmAck", data: { Tag: tag, Id: id }, async: true });
                $('#lastalarms_table').delRowData(rowid);
                getlastalarms();
            }
            // } else ErrMessage("Нет прав на квитирование");
        }
        function kvitirovanie_all() {

            $.ajax({ type: "POST", url: '@Url.Action("SetAlarmAckAll", "Alarms")', async: true, success: getlastalarms, error: getlastalarms });
            //$.ajax({
            //    type: "POST", url: "/api/Alarms/CheckPermission", data: { a: PERMISSION_RIGHT_Kvit }, async: false,
            //    success: function (_data) { data = _data; }
            //});
            //var kvit = data;
            //if (kvit) {
            //    $.ajax({ type: "POST", url: "/api/Alarms/KvitAll", data: {}, async: true, success: getlastalarms });
            //
            //} else ErrMessage("Нет прав на квитирование");

        }
</script>