 <!-- Styles -->
<link rel="stylesheet" type='text/css' href='/Content/_CSS/main.css' />
<link type="text/css" rel="stylesheet" href="/Content/_CSS/Developer/Index.css" />
<!--
    <link rel="stylesheet" type='text/css' href='/Content/_CSS/jqueryUI Theme/jquery-ui-1.10.4.custom.css' />
    END -->
<!-- Scripts -->
<script type="text/javascript" src="/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src="/Scripts/_JS/main.js"></script>

<style>
    .eButton {
        display: block;
        width: 200px;
        height: 30px;
        text-align: center;
        padding: 5px;
        margin: 10px;
        cursor: pointer;
        background-color: #88f;
        color: #fff;
        white-space: nowrap;
    }

        .eButton:hover {
            background-color: #66e;
        }
</style>
<!--<input type="button" onclick=UpdateThreadsStates() value="update"/>-->
<div id="threadStateTableId"></div>

<div onclick=WriteTag() class="eButton">
    <span> Write</span>
</div>
<script type="text/javascript">
    CreateThreadStateTable("threadStateTableId");
    var threadStateTableElement;

    setInterval(function() {
        UpdateThreadsStates();
    }, 1000);

    function CreateThreadStateTable(parentId) {
        var parentElement = document.getElementById(parentId);
        if (parentElement == null)
            return;
        threadStateTableElement = document.createElement("table");
        threadStateTableElement.className = "tagsTable";
        parentElement.appendChild(threadStateTableElement);
    }

    function ClearThreadStateTable() {
        if (threadStateTableElement == null)
            return;
        while (threadStateTableElement.firstChild)
            threadStateTableElement.removeChild(threadStateTableElement.firstChild);
    }

    function AddThreadStateTableItemHeader(opc, tag,value, time,qual) {
        if (threadStateTableElement == null)
            return;
        var row = threadStateTableElement.insertRow();
        var cell = row.insertCell(0); cell.className = "tagsTableCell"; cell.innerHTML = opc; cell.style.width = "70px";
        cell = row.insertCell(1); cell.className = "tagsTableCell"; cell.innerHTML = tag; cell.style.width = "100px";
        cell = row.insertCell(2); cell.className = "tagsTableCell"; cell.innerHTML = value; cell.style.width = "100px";
        cell = row.insertCell(3); cell.className = "tagsTableCell"; cell.innerHTML = time; cell.style.width = "100px";
        cell = row.insertCell(4); cell.className = "tagsTableCell"; cell.innerHTML = qual; cell.style.width = "100px";

    }

    function AddThreadStateTableItem(opc, tag, value, time, qual) {
        if (threadStateTableElement == null)
            return;
        var row = threadStateTableElement.insertRow();
        var cell = row.insertCell(0); cell.className = "tagsTableCell"; cell.innerHTML = opc;
        cell = row.insertCell(1); cell.className = "tagsTableCell"; cell.innerHTML = tag;
        cell = row.insertCell(2); cell.className = "tagsTableCell"; cell.innerHTML = value;
        cell = row.insertCell(3); cell.className = "tagsTableCell"; cell.innerHTML = time;
        cell = row.insertCell(4); cell.className = "tagsTableCell"; cell.innerHTML = qual;

    }

    function UpdateThreadsStates() {
       // $.ajax({ type: "POST", url: "/api/Opc/GetAllOpcTagsValues", async: false, success: after_UpdateOpcStates });
        //$.ajax({ type: "POST", url: "/api/developer/GetThreadsStates", async: true, success: after_UpdateThreadsStates2 });
    }
    function WriteTag() {
        $.ajax({
            type: "POST", url: '@Url.Action("GetReport", "Reports")?name=Mitsubishi.BIK.Deb', async: false,
            success: function (_data) { data = _data; }
        });
      // $.ajax({
      //     type: "POST", url: "Reports/GetReport", async:
      //         false, data: { Report: "Report1"}, success: after_WriteTag
      // });
    }
    function after_WriteTag(data) {alert(data);}
    function after_UpdateOpcStates(data) {
        ClearThreadStateTable();
        AddThreadStateTableItemHeader(
            "Opc",
            "Tag",
            "Value",
            "Time"
            );
        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {
            AddThreadStateTableItem(
                data[dataIndex].Tag.PollerId,
                data[dataIndex].Tag.TagName,
                data[dataIndex].LastValue,
                data[dataIndex].LastLogged,
                data[dataIndex].Quality
                );
        }
    }


</script>
