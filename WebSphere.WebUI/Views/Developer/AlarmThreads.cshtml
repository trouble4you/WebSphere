@{
    ViewBag.Title = "Web Telemetry System «WebSphere»";
    Layout = "~/Views/Shared/_Layout.cshtml";
}   <!-- Styles -->
<link rel="stylesheet" type='text/css' href='/Content/_CSS/main.css' />
<link type="text/css" rel="stylesheet" href="/Content/_CSS/Developer/Index.css" />
<!--
<link rel="stylesheet" type='text/css' href='/Content/_CSS/jqueryUI Theme/jquery-ui-1.10.4.custom.css' />
    END -->
<!-- Scripts -->
<script type="text/javascript" src="/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src="/Scripts/_JS/main.js"></script>
<script type="text/javascript" src="/Scripts/_JS/AdditionalFunctions.js"></script>

<!--<input type="button" onclick=UpdateThreadsStates() value="update"/>-->
<div onclick=restartalarms() class="eButton">
    <span> Write</span>
</div>
<div id="threadStateTableId"></div>
<style>
    .eButton {
        display: block;
        width: 200px;
        height: 30px;
        text-align: center;
        padding: 5px;
        margin: 10px;
        cursor: pointer;
        background-color: #88f;
        color: #fff;
        white-space: nowrap;
    }

        .eButton:hover {
            background-color: #66e;
        }
</style>
<script type="text/javascript">
    function restartalarms() {
        //читаем алармы
        $.ajax({ type: "POST", url: "/Alarms/RestartAlarms", async: true, success: OkMessage("Ok") });
    }
    CreateThreadStateTable("threadStateTableId");
    var threadStateTableElement;

    setInterval(function () {
        UpdateThreadsStates();
    }, 1000);

    function CreateThreadStateTable(parentId) {
        var parentElement = document.getElementById(parentId);
        if (parentElement == null)
            return;
        threadStateTableElement = document.createElement("table");
        threadStateTableElement.className = "tagsTable";
        parentElement.appendChild(threadStateTableElement);
    }

    function ClearThreadStateTable() {
        if (threadStateTableElement == null)
            return;
        while (threadStateTableElement.firstChild)
            threadStateTableElement.removeChild(threadStateTableElement.firstChild);
    }

    function AddThreadStateTableItemHeader(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) {
        if (threadStateTableElement == null)
            return;
        var row = threadStateTableElement.insertRow();
        var
        cell = row.insertCell(0); cell.className = "tagsTableCell"; cell.innerHTML = v1;
        cell = row.insertCell(1); cell.className = "tagsTableCell"; cell.innerHTML = v2;
        cell = row.insertCell(2); cell.className = "tagsTableCell"; cell.innerHTML = v3;
        cell = row.insertCell(3); cell.className = "tagsTableCell"; cell.innerHTML = v4;
        cell = row.insertCell(4); cell.className = "tagsTableCell"; cell.innerHTML = v5;
        cell = row.insertCell(5); cell.className = "tagsTableCell"; cell.innerHTML = v6;
        cell = row.insertCell(6); cell.className = "tagsTableCell"; cell.innerHTML = v7;
        cell = row.insertCell(7); cell.className = "tagsTableCell"; cell.innerHTML = v8;
        cell = row.insertCell(8); cell.className = "tagsTableCell"; cell.innerHTML = v9;
        cell = row.insertCell(9); cell.className = "tagsTableCell"; cell.innerHTML = v10;
        cell = row.insertCell(10); cell.className = "tagsTableCell"; cell.innerHTML = v11;
        cell = row.insertCell(11); cell.className = "tagsTableCell"; cell.innerHTML = v12;
    }

    function AddThreadStateTableItem(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12) {
        if (threadStateTableElement == null)
            return;
        var row = threadStateTableElement.insertRow();
        var
        cell = row.insertCell(0); cell.className = "tagsTableCell"; cell.innerHTML = v1;
        cell = row.insertCell(1); cell.className = "tagsTableCell"; cell.innerHTML = v2;
        cell = row.insertCell(2); cell.className = "tagsTableCell"; cell.innerHTML = v3;
        cell = row.insertCell(3); cell.className = "tagsTableCell"; cell.innerHTML = v4;
        cell = row.insertCell(4); cell.className = "tagsTableCell"; cell.innerHTML = v5;
        cell = row.insertCell(5); cell.className = "tagsTableCell"; cell.innerHTML = v6;
        cell = row.insertCell(6); cell.className = "tagsTableCell"; cell.innerHTML = v7;
        cell = row.insertCell(7); cell.className = "tagsTableCell"; cell.innerHTML = v8;
        cell = row.insertCell(8); cell.className = "tagsTableCell"; cell.innerHTML = v9;
        cell = row.insertCell(9); cell.className = "tagsTableCell"; cell.innerHTML = v10;
        cell = row.insertCell(10); cell.className = "tagsTableCell"; cell.innerHTML = v11;
        cell = row.insertCell(11); cell.className = "tagsTableCell"; cell.innerHTML = v12;

    }

    function UpdateThreadsStates() {
        $.ajax({ type: "POST", url: "/alarms/GetAlarmsCfgStates", async: true, success: after_UpdateOpcStates });
    }

    function after_UpdateOpcStates(data) {
        ClearThreadStateTable();
        AddThreadStateTableItemHeader(
            "Tag",
            "Enabled",
            "Active",
            "HihiText",
            "HiText",
            "NormalText",
            "LoText",
            "LoloText",
            "HihiSeverity",
            "HiSeverity",
            "LoSeverity",
            "LoloSeverity"
            );
        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {
            AddThreadStateTableItem(
                data[dataIndex].Tag.TagName,
                data[dataIndex].Enabled,
                data[dataIndex].Active,
                data[dataIndex].HihiText,
                data[dataIndex].HiText,
                data[dataIndex].NormalText,
                data[dataIndex].LoText,
                data[dataIndex].LoloText,
                data[dataIndex].HihiSeverity,
                data[dataIndex].HiSeverity,
                data[dataIndex].LoSeverity,
                data[dataIndex].LoloSeverity
                );
        }

    }


</script>
