@using WebSphere.Domain.Concrete
@model List<moduleCondition>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/Content/JSTree/themes/default/style.min.css" rel="stylesheet" />
<link href="~/Content/JSTree/jstree_style.css" rel="stylesheet" />
<link href="~/Content/Configurator.css" rel="stylesheet" />
<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
      type="text/css" rel="stylesheet" />


<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jstree.js"></script>

<script src="~/Scripts/configurator.js"></script>
<script src="~/Scripts/script.js"></script>
<div id="bg_layer"></div>
<div id="container" class="left-boxConfig"></div>
<div class="right-boxConfig">

    <div id="dialogToAddModule" class="dialogPopUpWindow"></div>
    <div id="dialogAboutChanges" class="dialogPopUpWindow"></div> @*пока не используется*@

    <div class="ac-container">
        <div>
            <input class="accInput" id="ac-1" name="accordion-1" type="radio" checked />
            <label class="accLabel" for="ac-1">Свойства узла</label>
            <div class="ac-small help">
                <div id="tagInfo"></div>
            </div>
        </div>
        <div>
            <input class="accInput" id="ac-2" name="accordion-1" type="radio" />
            <label class="accLabel" for="ac-2">Список модулей</label>
            <div class="ac-small help">
                <div id="ModuleInfoHelp">
                    <div class="Link_blue1">
                        <ul>
                            <li class="moduleActions">
                                <a id="AddNewModule" href="javascript:void(0)">Добавить модуль</a>
                            </li>
                        </ul>
                    </div>

                    <div id="ModuleInfo">
                        @Html.Partial("ModulesListPartial", Model)
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>



<script type="text/javascript">
    var checkCopyNode = 0;//флаг копирование
    var checkCreateNode = 0;//флаг создания 
    var refCreateNode = 0; //получим ссылку на узел, для которого выбрано контекстное меню

    //setInterval(detectConfTreeChanges, 1000);

    function detectConfTreeChanges(nodeId) {
        var currentClickId = $('[aria-selected="true"]');
        var id = 0;
        if(currentClickId.length>0)
            id = currentClickId.attr('id');

        $.ajax({
            type: "GET",
            url: '/Configurator/WatchUserManipulation',
            data: { nodeId: id },
            async: false,
            error: function () {
                alert("Неудача при попытке обновления состояния дерева");
            }
        });
    }

    $(function () {
        var t = $('#jstreeConf').val();

        $('#container').jstree({
            'core': {
                'data': [@Html.Raw(ViewBag.JStreeStr)],
                "check_callback": true,
                "state": { "key": "jstreeConf", "events": "destroy.jstree" }

                //    function (operation, node, node_parent, node_position, more) {
                //    // operation can be 'create_node', 'rename_node', 'delete_node', 'move_node' or 'copy_node'
                //    // in case of 'rename_node' node_position is filled with the new node name
                //    return operation === 'delete_node';
                //}
            },
            //
            "plugins": ["contextmenu", "state", "json_data"],
            "contextmenu":
            {
                "items": function ($node) {
                    var tree = $('#container').jstree(true);
                    var items = {
                        "Create": {
                            "label": "Добавить узел",
                            "action": function (data) {
                                refCreateNode = $.jstree.reference(data.reference); 

                                createNode($node.id);
                                checkCreateNode = 1;
                            }
                        },
                        "Copy": {
                            "label": "Копировать",
                            "action": function (data) {
                                //var newContName="";
                                if ($node.icon === "jstree-type_5")
                                {
                                    copyControllerNode($node.id);
                                }
                                checkCopyNode = 1;
                                copyNode($node.id);
                            }
                        },
                        "Paste": {
                            "label": "Вставить",
                            "action": function (data) {
                                //var ref = $.jstree.reference(data.reference),
                                //sel = ref.get_selected();

                                checkCopyNode = 0;
                                $.when(pasteNode($node.id)).then(function (dataPaste) {
                                    LoadPageOff();
                                    $('#bg_layer').hide();
                                    if (dataPaste.charAt(0) != "<")
                                    {
                                            var JSONNode = JSON.parse(dataPaste);

                                            var refPasteNode = $.jstree.reference(data.reference);//получаем выбранный узел
                                            var sel = refPasteNode.get_selected();//получаем чисто Id узла
                                            if (!sel.length) { return false; }
                                            sel = sel[0];
                                            sel = refPasteNode.create_node(sel, JSONNode);

                                    }
                                    else {
                                        $('#dialogToAddModule').empty().html(dataPaste);
                                    }

                                },
                                function (error) {
                                    alert("При вставке узла произошла ошибка");
                                    LoadPageOff(); $('#bg_layer').hide();
                                });

                            }
                        },
                        "Delete": {
                            "label": "Удалить",
                            "action": function (data) {

                                var ref = $.jstree.reference(data.reference),
                                sel = ref.get_selected();
                                if (!sel.length) { return false; }
                                //если удаляем непосредственно узел канала связи
                                if ($node.li_attr.name == "channelNode" || $node.li_attr.name == "folder")
                                {
                                    //проверяем есть ли закрепленные за этим каналом объекты
                                    if($node.li_attr.name == "channelNode")
                                    {
                                        deleteChannelNode($node.id, 0);
                                    }
                                    else{
                                        deleteChannelNode(0, $node.id);
                                    }

                                    if (permitDelete == true)//если в глобальную переменную падает тру, то удаляем все
                                    {
                                        ref.delete_node(sel);
                                        deleteNode($node.id);
                                        permitDelete = false;
                                    }
                                }

                                else { // если ничего не связано с каналами, то тихо удаляем
                                    ref.delete_node(sel);
                                    deleteNode($node.id);
                                }
                            }
                        },
                        "Rename": {
                            "label": "Переименовать",
                            "action": function (obj) { tree.edit($node); }
                        }

                    }
                    if (checkCopyNode == 0) {//ессли контекстное меню копировать не было нажато
                        delete items.Paste;
                    }
                    if ($node.icon === "jstree-type_2" || $node.icon === "jstree-type_17" || $node.icon === "jstree-type_18" || $node.icon === "jstree-type_22") {
                        delete items.Create;
                    }
                    if ($node.icon === "jstree-type_1" || $node.icon === "jstree-type_17" || $node.icon === "jstree-type_18" || $node.icon === "jstree-type_21" || $node.icon === "jstree-type_23") {
                        delete items.Copy;
                    }
                    if ($node.icon === "jstree-type_23") {
                        delete items.Delete;
                    }


                    if (checkCreateNode == 1) {
                        items.Delete._disabled = true;
                        items.Copy._disabled = true;
                        items.Create._disabled = true;
                        if (checkCopyNode == 1) {
                            items.Paste._disabled = true;
                        }
                        items.Rename._disabled = true;
                    }

                    return items;
                }
            }
        });

        $('#container').bind("select_node.jstree", function (e, data) {
            var id = data.instance.get_node(data.selected[0]).id;
            var iconName = data.node.icon;
            LoadPageOn();
            $('#bg_layer').show();
            $.ajax({
                type: "GET",
                url: '/Configurator/showTabProps',
                data: { id: id},
                async: true,
                success: function (data) {
                    $('#tagInfo').html(data);
                    LoadPageOff();
                    $('#bg_layer').hide();
                    calculateHeight();
                },
                error: function () {
                    alert("Неудача при отправке аякс запроса при открытии узла");
                    LoadPageOff();
                    $('#bg_layer').hide();
                }
            });

            //может какой-то из запросов сделать синхронным??????????????
            //$.ajax({
            //    type: "GET",
            //    url: '/Configurator/СheckTreeUpdates',
            //    //data: { id: id },
            //    async: true,
            //    success: function (data) {
            //        if (data != "0")
            //        {
            //            $('#jstreeConf').jstree(true).settings.core.data = data;
            //            $('#jstreeConf').jstree(true).refresh();
            //        }

            //        LoadPageOff();
            //        $('#bg_layer').hide();

            //        //$('#tagInfo').html(data);
            //        //LoadPageOff();
            //        //$('#bg_layer').hide();
            //        //calculateHeight();
            //    },
            //    error: function () {
            //        alert("Неудача при отправке аякс запроса при открытии узла");
            //        LoadPageOff();
            //        $('#bg_layer').hide();
            //    }
            //});


        })
       .bind("rename_node.jstree", function (e, data) {
           var newName = data.text;
           var id = data.node.id;

           $.ajax({
               type: "GET",
               url: '/Configurator/RenameNode',
               data: { idRenameNode: id, newNodeName: newName },
               //async: true,
               async: false,
               //НЕ УДАЛЯТЬ ВДРУГ ПОНАДОБИТСЯ
               //success: function(data){
               //    $('#tagInfo').html(data);
               //},
               error: function () {
                   alert("Неудача при отправке аякс запроса при переименовании");
               }
           });
       });


    });

    $(document).ready(function () {

        calculateContainerSize();
        $(window).resize(function () {
            calculateContainerSize();
            calculateHeight();
        });

        $('#AddNewModule').click(function () {
            $('#dialogToAddModule').load('@Url.Action("AddModule", "Configurator")');
        });
    });
</script>

