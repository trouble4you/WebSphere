@using WebSphere.Domain.Entities;
@model WebSphere.Domain.Entities.TagProps

@{
    int OPCID = Model.Opc;
    var OPCserver = ViewBag.OPCservers;
    string OPCserverName = OPCserver[OPCID];
}
<div id="Opc" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => m.Opc, "OPC сервер", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @*Opc11 чтобы не перетиралось значение поля*@
        @Html.TextBox("Opc11", OPCserverName, new { disabled = "disabled", @readonly = "readonly" })
        @Html.HiddenFor(m => m.Opc)
    </div>
</div>

<div id="Connection" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.Connection, "Connection", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => Model.Connection)
        @Html.ValidationMessageFor(m => Model.Connection)

    </div>
</div>
<div id="Description" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.Description, "Description", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => Model.Description)
        @Html.ValidationMessageFor(m => Model.Description)
    </div>
</div>

@{
    Dictionary<int, string> realTypes = new Dictionary<int, string>
                { {0,"Null"},
                {1, "Boolean"},
                {2, "SByte"},
                {3, "Byte"},
                {4, "Int16"},
                {5, "UInt16"},
                {6, "Int32"},
                {7, "UInt32"},
                {8, "Int64"},
                {9, "UInt64"},
                {10, "Float"},
                {11,"Double"},
                {12, "String"},
                {13, "DateTime"},
                {14, "Guid"},
                {15, "ByteString"},
                {16, "XmlElement"},
                {17, "NodeId"},
                {18, "ExpandedNodeId"},
                {19, "StatusCode"},
                {20, "QualifiedName"},
                {21,"LocalizedText"},
                {22, "ExtensionObject"},
                {23, "DataValue"},
                {24, "Variant"},
                {25, "DiagnosticInfo"},
                {26, "Number"},
                {27, "Integer"},
                {28, "UInteger"},
                {29, "Enumeration"}

                };
}

<div id="RealType" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.RealType, "RealType", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.DropDownListFor(m => m.RealType, new SelectList(realTypes, "Key", "Value"))
    </div>
</div>


<div id="ControllerType" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.ControllerType, "ControllerType", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.DropDownListFor(m => m.ControllerType, new SelectList(realTypes, "Key", "Value"))
    </div>
</div>

<div id="Register">
    <div class="form-group row">
        <div class="col-xs-3">
        </div>
        <div class="col-xs-9 infoRegister">
            <p>H[функция][адрес]</p>
            <p>[функция].[адрес]</p>
            <p>[функция].[адрес].[бит].[смещение]</p>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            @Html.LabelFor(m => Model.Register, "Register", new { @class = "control-label" })
        </div>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Register)
            @Html.ValidationMessageFor(m => m.Register)
        </div>
    </div>
</div>

@{
    var accessTypeDict = new Dictionary<int, string>
        {
          {1, "запись"},
          {2, "чтение"},
          {3, "запись и чтение"}
        };
}
<div id="AccessType" class="form-group row">

    <div class="col-xs-3">
        @Html.LabelFor(m => Model.AccessType, "Права доступа", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.DropDownListFor(m => m.AccessType, new SelectList(accessTypeDict, "Key", "Value"))
    </div>
</div>

<div id="Order" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.Order, "Order", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.Order)
        @Html.ValidationMessageFor(m => m.Order)
    </div>
</div>

<div id="InMin" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.InMin, "InMin", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.InMin)
        @Html.ValidationMessageFor(m => m.InMin)
    </div>
</div>


<div id="InMax" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.InMax, "InMax", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.InMax)
        @Html.ValidationMessageFor(m => m.InMax)
    </div>
</div>

<div id="OutMin" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.OutMin, "OutMin", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.OutMin)
        @Html.ValidationMessageFor(m => m.OutMin)
    </div>
</div>

<div id="OutMax" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.OutMax, "OutMax", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.OutMax)
        @Html.ValidationMessageFor(m => m.OutMax)
    </div>
</div>

<div id="History_IsPermit" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.History_IsPermit, "History_IsPermit", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.CheckBoxFor(m => m.History_IsPermit, new { @id = "History_IsPermit", @class = "chkBoxPropsDisable" })
        <div style="clear:right;"></div>
    </div>

</div>

<div id="RegPeriod1" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.RegPeriod, "RegPeriod", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.RegPeriod)
        @Html.HiddenFor(m => m.RegPeriod)
        @Html.ValidationMessageFor(m => m.RegPeriod)
    </div>
</div>

<div id="Deadbend1" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.Deadbend, "Deadbend", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.Deadbend)
        @Html.HiddenFor(m => m.Deadbend)
        @Html.ValidationMessageFor(m => m.Deadbend)
    </div>
</div>
<div id="IsSpecialTag" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.IsSpecialTag, "IsSpecialTag", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.TextBoxFor(m => m.IsSpecialTag)
        @Html.ValidationMessageFor(m => m.IsSpecialTag)
    </div>
</div>
<div id="UpdateAnyway" class="form-group row">
    <div class="col-xs-3">
        @Html.LabelFor(m => Model.UpdateAnyway, "UpdateAnyway", new { @class = "control-label" })
    </div>
    <div class="col-xs-9">
        @Html.CheckBoxFor(m => m.UpdateAnyway, new { @id = "UpdateAnyway", @class = "chkBoxPropsDisable" })
        <div style="clear: both;"></div>
    </div>
</div>
<div id="Events">
    <div class="form-group row">
        <div class="col-xs-3">@Html.Label("Events:", new { @class = "control-label" })</div>
        <div class="col-xs-9"></div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            <div class="col-xs-4"></div>
            <div class="col-xs-4"></div>
            <div class="col-xs-4"></div>
        </div>
        <div class="col-xs-9">
            <div class="col-xs-4">
                <div>@Html.LabelFor(m => m.Events.Enabled)</div>
                <div>@Html.CheckBoxFor(m => m.Events.Enabled)</div>
            </div>
            <div class="col-xs-4">
            </div>
            <div class="col-xs-4">
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-xs-3">

            <div class="col-xs-4"></div>
            <div class="col-xs-4"></div>
            <div class="col-xs-4">@Html.Label("Уставка", new { @class = "control-label" })</div>
        </div>
        <div class="col-xs-9">
            @Html.Label("Сообщение", new { @class = "control-label" })
        </div>
    </div>
    <div id="EventContainer">

        @if (Model.Events != null)
        {
            if (Model.Events.EventMessages != null)
            {
                for (int i = 0; i < Model.Events.EventMessages.Count; i++)
                {
                    <div class="form-group row">
                        <div class="col-xs-3">
                            <div class="col-xs-4"></div>
                            <div class="col-xs-4"></div>
                            <div class="col-xs-4">
                                @Html.TextBoxFor(m => m.Events.EventMessages[i].Value)

                            </div>
                        </div>
                        <div class="col-xs-9">
                            @Html.TextBoxFor(m => m.Events.EventMessages[i].Message)

                            <img id="removeEvent" src="~/Content/images/tabs/stopdmol06.jpg" style="width:20px; height:20px;" />
                        </div>
                    </div>
                    <div class="form-group row helpErrorInfo">
                        <div class="col-xs-12">
                            @Html.ValidationMessageFor(m => m.Events.EventMessages[i].Message)
                            @Html.ValidationMessageFor(m => m.Events.EventMessages[i].Value)
                        </div>
                    </div>
                }
            }
        }
    </div>
    <div id="addEventDiv" class="form-group row">
        <div class="col-xs-3">
        </div>
        <div class="col-xs-9">
            <button id="addEvent" type="button" class="btn btn-default"><img src="~/Content/images/tabs/Plus_64.png" style="width:20px; height:20px" /> Добавить событие</button>
        </div>
    </div>

</div>
<div id="Alarms">
    <div class="form-group row"></div>
    <div class="form-group row">
        <div class="col-xs-3">@Html.Label("Alarms:", new { @class = "control-label" })</div>
        <div class="col-xs-9"></div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            <div class="col-xs-4"></div>
            <div class="col-xs-4"></div>
            <div class="col-xs-4"></div>
        </div>
        <div class="col-xs-9">
            <div class="col-xs-4">
                <div>@Html.LabelFor(m => m.Alarms.Enabled)</div>
                <div>
                    @Html.CheckBoxFor(m => m.Alarms.Enabled)
                    @*@Html.HiddenFor(m => m.Alarms.Enabled)*@
                 </div>
            </div>
            <div class="col-xs-4">
                <div>@Html.LabelFor(m => m.Alarms.Permit)</div>
                <div>@Html.CheckBoxFor(m => m.Alarms.Permit, new { @class = "chkBoxPropsDisable" })</div>
            </div>
            <div class="col-xs-4">
                <div>@Html.LabelFor(m => Model.Alarms.Sound, "Sound", new { @class = "control-label" })</div>
                <div>
                    @Html.CheckBoxFor(m => m.Alarms.Sound, new { @name = "Sound" })
                    @*@Html.HiddenFor(m => m.Alarms.Sound)*@
                </div>
            </div>
        </div>
    </div>
    <div class="form-group row"></div>
    <div class="form-group row">
        <div class="col-xs-3">

            <div class="col-xs-4"></div>
            <div class="col-xs-4"></div>
            <div class="col-xs-4">@Html.Label("Значение", new { @class = "control-label" })</div>

        </div>
        <div class="col-xs-9">
            @Html.Label("Сообщение", new { @class = "control-label" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            <div class="col-xs-4"></div>
            <div class="col-xs-4">@Html.Label("HiHi")</div>
            <div class="col-xs-4">
                @Html.TextBoxFor(m => m.Alarms.HiHiSeverity)
                @Html.HiddenFor(m => m.Alarms.HiHiSeverity)
            </div>
        </div>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Alarms.HiHiText)
            @Html.HiddenFor(m => m.Alarms.HiHiText)
            @Html.ValidationMessageFor(m => m.Alarms.HiHiSeverity)
            @Html.ValidationMessageFor(m => m.Alarms.HiHiText)
            

        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            <div class="col-xs-4"></div>
            <div class="col-xs-4">@Html.Label("Hi")</div>
            <div class="col-xs-4">
                @Html.TextBoxFor(m => m.Alarms.HiSeverity)
                @Html.HiddenFor(m => m.Alarms.HiSeverity)

            </div>
        </div>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Alarms.HiText)
            @Html.HiddenFor(m => m.Alarms.HiText)
            @Html.ValidationMessageFor(m => m.Alarms.HiSeverity)
            @Html.ValidationMessageFor(m => m.Alarms.HiText)

        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            <div class="col-xs-4"></div>
            <div class="col-xs-4">@Html.Label("Normal")</div>
            <div class="col-xs-4"></div>
        </div>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Alarms.NormalText)
            @Html.HiddenFor(m => m.Alarms.NormalText)
            @Html.ValidationMessageFor(m => m.Alarms.NormalText)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            <div class="col-xs-4"></div>
            <div class="col-xs-4">@Html.Label("Lo")</div>
            <div class="col-xs-4">
                @Html.TextBoxFor(m => m.Alarms.LoSeverity)
                @Html.HiddenFor(m => m.Alarms.LoSeverity)
            </div>
        </div>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Alarms.LoText)
            @Html.HiddenFor(m => m.Alarms.LoText)
            @Html.ValidationMessageFor(m => m.Alarms.LoSeverity)
            @Html.ValidationMessageFor(m => m.Alarms.LoText)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-3">
            <div class="col-xs-4"></div>
            <div class="col-xs-4">@Html.Label("LoLo")</div>
            <div class="col-xs-4">
                @Html.TextBoxFor(m => m.Alarms.LoLoSeverity)
                @Html.HiddenFor(m => m.Alarms.LoLoSeverity)
            </div>
        </div>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Alarms.LoLoText)
            @Html.HiddenFor(m => m.Alarms.LoLoText)
            @Html.ValidationMessageFor(m => m.Alarms.LoLoSeverity)
            @Html.ValidationMessageFor(m => m.Alarms.LoLoText)
        </div>
    </div>
</div>











